[pytest]
minversion = 8.0
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Output options
addopts = 
    -v
    --strict-markers
    --tb=short
    --cov=src/astarion
    --cov-report=term-missing:skip-covered
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=80

# Test markers
markers =
    unit: Unit tests (fast, no external dependencies)
    integration: Integration tests (may require external services)
    slow: Slow tests that should be run less frequently
    smoke: Smoke tests for quick validation
    rag: Tests for RAG pipeline components
    agents: Tests for agent functionality

# Coverage configuration
[coverage:run]
source = src/astarion
omit = 
    */tests/*
    */conftest.py
    */__init__.py
    */config/*
    
[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    
[coverage:html]
directory = htmlcov

# Logging
[tool:pytest]
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S 